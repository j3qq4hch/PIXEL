###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        21/Jan/2016  09:25:36
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\led_zeppelin_5x7\app\src\app.c
#    Command line =  
#        C:\led_zeppelin_5x7\app\src\app.c -D USE_STDPERIPH_DRIVER -D
#        USE_STM32072B_EVAL -D STM32F042x6 -lcN
#        C:\led_zeppelin_5x7\app\EWARM\watchdog\List\ -o
#        C:\led_zeppelin_5x7\app\EWARM\watchdog\Obj\ --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M0 --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I C:\led_zeppelin_5x7\app\EWARM\..\
#        -I C:\led_zeppelin_5x7\app\EWARM\..\led_matrix\ -I
#        C:\led_zeppelin_5x7\app\EWARM\..\serint\ -I
#        C:\led_zeppelin_5x7\app\EWARM\..\usb\ -I
#        C:\led_zeppelin_5x7\app\EWARM\..\inc\ -I
#        C:\led_zeppelin_5x7\app\EWARM\..\CLI\ -I
#        C:\led_zeppelin_5x7\app\EWARM\..\..\Libraries\CMSIS\Device\ST\STM32F0xx\Include\
#        -I
#        C:\led_zeppelin_5x7\app\EWARM\..\..\Libraries\STM32F0xx_StdPeriph_Driver\inc\
#        -I
#        C:\led_zeppelin_5x7\app\EWARM\..\..\Libraries\STM32_USB_Device_Driver\inc\
#        -I
#        C:\led_zeppelin_5x7\app\EWARM\..\..\Libraries\STM32_USB_Device_Library\Core\inc\
#        -I
#        C:\led_zeppelin_5x7\app\EWARM\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\
#        -I C:\led_zeppelin_5x7\app\EWARM\..\..\Utilities\STM32_EVAL\ -I
#        C:\led_zeppelin_5x7\app\EWARM\..\..\Utilities\STM32_EVAL\Common\ -I
#        C:\led_zeppelin_5x7\app\EWARM\..\..\Utilities\STM32_EVAL\STM32072B_EVAL\
#        -On --use_c++_inline --require_prototypes -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  C:\led_zeppelin_5x7\app\EWARM\watchdog\List\app.lst
#    Object file  =  C:\led_zeppelin_5x7\app\EWARM\watchdog\Obj\app.o
#
###############################################################################

C:\led_zeppelin_5x7\app\src\app.c
      1          
      2          #include <string.h>
      3          #include "usbd_cdc_core.h"
      4          #include "usbd_usr.h"
      5          #include "bitdef.h"
      6          #include "types.h"
      7          #include "5x7.h"
      8          #include "test.h"
      9          #include "uptime.h"
     10          #include "lis302dl.h"
     11          #include "misc.h"
     12          #include "serint.h"
     13          #include "cli.h"
     14          USB_CORE_HANDLE  USB_Device_dev ;
     15          serint_desc_t usb_cdc = {0}; 
     16          void usb_vcp_sendbuf(const u8* data, u16 len );
     17          
     18          int main(void)
     19          {
     20            RCC_SYSCLKConfig(RCC_SYSCLKSource_HSI48);
     21            RCC_ClocksTypeDef c;
     22            RCC_GetClocksFreq(&c);
     23            SysTick_Config(SYSTICK_PERIOD);
     24            //led_matrix_init();  
     25           
     26            lis302d_init(NULL, NULL);
     27           
     28            USBD_Init(&USB_Device_dev,
     29                      &USR_desc, 
     30                      &USBD_CDC_cb, 
     31                      &USR_cb);
     32          
     33            serint_init (&usb_cdc,
     34                         "usb",
     35          		NULL,
     36                          usb_vcp_sendbuf, //presend
     37                          NULL, //aftersend
     38                          NULL, //open_func
     39                          NULL);//close_func
     40          
     41            cli_init(&usb_cdc);
     42           // test_init();   
     43          delay_ms__(300);
     44          while (1)
     45          {
     46          cli();  
     47          //test_animation();
     48          delay_ms__(500);
     49          }
     50          } 
     51          
     52          
     53          void i2c_init(void)
     54          { 
     55            RCC_APB1PeriphClockCmd(I2C_rcc, ENABLE); 
     56            I2C_InitTypeDef  I2C_InitStructure;
     57          
     58            I2C_InitStructure.I2C_Mode                    = I2C_Mode_I2C;
     59            I2C_InitStructure.I2C_AnalogFilter            = I2C_AnalogFilter_Enable;
     60            I2C_InitStructure.I2C_DigitalFilter           = 0x00;
     61            I2C_InitStructure.I2C_OwnAddress1             = 0x00;
     62            I2C_InitStructure.I2C_Ack                     = I2C_Ack_Enable;
     63            I2C_InitStructure.I2C_AcknowledgedAddress     = I2C_AcknowledgedAddress_7bit;
     64            I2C_InitStructure.I2C_Timing                  = 0x00210507; // WHAT A FUCK!?
     65          
     66            I2C_Init      (I2C_IN_USE, &I2C_InitStructure);
     67            I2C_Cmd       (I2C_IN_USE, ENABLE);  
     68          }
     69          
     70          //////////////////////////////////////////////////////////////////////////////////////////////////////
     71          
     72          void i2c_gpio_init(void)
     73          {
     74            GPIO_InitTypeDef  GPIO_InitStructure; 
     75            RCC_AHBPeriphClockCmd(I2C_SDA_rcc | I2C_SCL_rcc, ENABLE);
     76            
     77            
     78            GPIO_PinAFConfig(I2C_SDA_port, I2C_SDA_AF_source, GPIO_AF_1);
     79            GPIO_PinAFConfig(I2C_SCL_port, I2C_SCL_AF_source, GPIO_AF_1);
     80            
     81            GPIO_InitStructure.GPIO_Pin   = I2C_SCL_pin;
     82            GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_AF;
     83            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
     84            GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
     85            GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
     86            GPIO_Init(I2C_SCL_port, &GPIO_InitStructure);
     87            
     88            GPIO_InitStructure.GPIO_Pin = I2C_SCL_pin;
     89            GPIO_Init(I2C_SCL_port, &GPIO_InitStructure);
     90          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      20   NVIC_SetPriority
       8   SysTick_Config
         8   -> NVIC_SetPriority
      16   i2c_gpio_init
        16   -> GPIO_Init
        16   -> GPIO_PinAFConfig
        16   -> RCC_AHBPeriphClockCmd
      32   i2c_init
        32   -> I2C_Cmd
        32   -> I2C_Init
        32   -> RCC_APB1PeriphClockCmd
      56   main
        56   -> RCC_GetClocksFreq
        56   -> RCC_SYSCLKConfig
        56   -> SysTick_Config
        56   -> USBD_Init
        56   -> cli
        56   -> cli_init
        56   -> delay_ms__
        56   -> lis302d_init
        56   -> serint_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  ?_0
     138  NVIC_SetPriority
      50  SysTick_Config
     360  USB_Device_dev
      88  i2c_gpio_init
      62  i2c_init
      94  main
      40  usb_cdc

 
 400 bytes in section .bss
   4 bytes in section .rodata
 496 bytes in section .text
 
 496 bytes of CODE  memory
   4 bytes of CONST memory
 400 bytes of DATA  memory

Errors: none
Warnings: none
